.answer id = answer.id  
  -if answer.best == true
   p Best answer:
  p=answer.body

  .votes_answer
    -if user_signed_in?
      p= button_to "Good", good_vote_answer_path(answer), method: :patch, data: { type: :json, id: "vote-good" }, remote: true
      p= button_to "Bad", bad_vote_answer_path(answer), method: :patch, data: { type: :json, id: "vote-bad" }, remote: true
    h votes result answer:
    .vote_result
      = answer.result_vote    
  .delete_vote
    -if answer.user_voted?(current_user)
      p= button_to "delete my vote", destroy_vote_answer_path(answer), method: :delete, remote: true
    -else
      p= button_to "delete my vote", destroy_vote_answer_path(answer), method: :delete, remote: true, class: "hidden"
  -if answer.files.attached?
    -answer.files.each do |file|
      .files_answer id = file.id
        = link_to file.filename.to_s, url_for(file)
        p= link_to "delete file", destroy_attach_file_answer_url(file), method: :delete, remote: true if current_user&.author?(answer)

  = render answer.links if answer.links.present?      

  -if current_user&.author?(answer.question) && answer.best == false
    = link_to "Best Answer", mark_best_answer_path(answer), method: :patch, remote: true

  -if current_user&.author?(answer)
    p= link_to 'Edit', '#', class: 'edit-answer-link', data: { answer_id: answer.id }
    = button_to 'DeleteA', answer_path(answer), method: :delete, remote: true

  p Cometns answer:
  .coment_answer
    
    =render answer.coments

  -if user_signed_in?
    = form_with model: [answer, answer.coments.build], url: create_coment_answer_path(answer),
      method: :patch, local: false do |f|
      = f.text_area :body, id: "answer_coment_body"

      =f.submit 'Coment answer'

  .answer= form_with model: answer, local: false, class: 'hidden', html: { id: "edit-answer-#{answer.id}" } do |f|
    = f.label :edit
    = f.text_area :body
    p= f.file_field :files, multiple: true, direct_upload: true

    = f.fields_for :links do |l|
      = render "links/link_fields", f: l
    .links
      = link_to_add_association 'add link', f, :links, partial: "links/link_fields"    

    = f.submit 'Save'