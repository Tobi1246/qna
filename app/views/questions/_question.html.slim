  .question
  .votes_question
    -if user_signed_in?
      p= button_to "Good", good_vote_question_path(question), method: :patch, data: { type: :json, id: "vote-good" }, remote: true
      h votes result:
      .vote_result
        = question.result_vote
      p= button_to "Bad", bad_vote_question_path(question), method: :patch, data: { type: :json, id: "vote-bad" }, remote: true
  .delete_vote
    -if question.user_voted?(current_user)
      p= button_to "delete my vote", destroy_vote_question_path(question), method: :delete, remote: true
    -else
      p= button_to "delete my vote", destroy_vote_question_path(question), method: :delete, remote: true, class: "hidden"  
  p= question.title
  p= question.body
  p Cometns:
  - question.coments.each do |coment|
    .coment_question id = coment.id
      = coment.body.to_s 
      = link_to " delete coment", destroy_coment_question_path(coment), method: :delete

  -if question.files.attached? 
    -question.files.each do |file|
      .files_question id = file.id
        = link_to file.filename.to_s, url_for(file)
        -if current_user&.author?(question)
          p= link_to "delete file", destroy_attach_file_question_path(file), method: :delete, remote: true

  = render question.links if question.links.present?

  -if current_user&.author?(question)
    p= link_to 'Edit question', '#', class: 'edit-question-link', data: { question_id: question.id }
    = button_to 'DeleteQ', question_path(question), method: :delete, remote: true

  =render 'form_coment'
  =render 'form_in_line'
